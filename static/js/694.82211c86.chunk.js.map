{"version":3,"file":"static/js/694.82211c86.chunk.js","mappings":"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","sources":["components/Playlist/Playlist.js","components/Track/Track.js","components/Tracklist/Tracklist.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Playlist.css\";\r\nimport Tracklist from \"../Tracklist/Tracklist\";\r\n\r\nfunction Playlist({\r\n  playlistName,\r\n  playlistTracks,\r\n  onRemove,\r\n  onNameChange,\r\n  onSave,\r\n  shareableLink,\r\n}) {\r\n  const [isSaving, setIsSaving] = useState(false);\r\n\r\n  const handleNameChange = (event) => {\r\n    onNameChange(event.target.value);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    setIsSaving(true);\r\n    await onSave();\r\n    setIsSaving(false);\r\n  };\r\n\r\n  const copyToClipboard = () => {\r\n    navigator.clipboard.writeText(shareableLink).then(() => {\r\n      alert(\"Playlist link copied to clipboard!\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"Playlist card p-4\">\r\n      <div className=\"form-group\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control text-center\"\r\n          value={playlistName}\r\n          onChange={handleNameChange}\r\n          placeholder=\"Playlist Name\"\r\n          aria-label=\"Change the playlist name\"\r\n        />\r\n      </div>\r\n      <Tracklist tracks={playlistTracks} onRemove={onRemove} isRemoval={true} />\r\n      <button\r\n        className={`btn btn-success mt-3 w-50 ${\r\n          isSaving ? \"scale-up\" : \"\"\r\n        } SaveButton`}\r\n        onClick={handleSave}\r\n        disabled={isSaving}\r\n        aria-label=\"Save playlist to Spotify\"\r\n      >\r\n        {isSaving ? (\r\n          <span\r\n            className=\"spinner-border spinner-border-sm me-2\"\r\n            role=\"status\"\r\n            aria-hidden=\"true\"\r\n          ></span>\r\n        ) : null}\r\n        Save to Spotify\r\n      </button>\r\n      {shareableLink && (\r\n        <div className=\"mt-3\">\r\n          <p className=\"text-muted\">Share your playlist:</p>\r\n          <div className=\"input-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={shareableLink}\r\n              readOnly\r\n            />\r\n            <button\r\n              className=\"btn btn-outline-secondary\"\r\n              onClick={copyToClipboard}\r\n              aria-label=\"Copy link to clipboard\"\r\n            >\r\n              Copy Link\r\n            </button>\r\n          </div>\r\n          <div className=\"d-flex justify-content-around mt-2\">\r\n            {/* Social Media Sharing Buttons */}\r\n            <a\r\n              href={`https://twitter.com/intent/tweet/url=${encodeURIComponent(\r\n                shareableLink\r\n              )}&text=Check%20out%20my%20playlist%20on%20Spotify!`}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              className=\"btn btn-info mt-2\"\r\n            >\r\n              Share on Twitter\r\n            </a>\r\n            <a\r\n              href={`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(\r\n                shareableLink\r\n              )}`}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              className=\"btn btn-primary mt-2\"\r\n            >\r\n              Share on Facebook\r\n            </a>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nPlaylist.propTypes = {\r\n  playlistName: PropTypes.string.isRequired,\r\n  playlistTracks: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n  onNameChange: PropTypes.func.isRequired,\r\n  onSave: PropTypes.func.isRequired,\r\n  shareableLink: PropTypes.string,\r\n};\r\n\r\nexport default Playlist;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Track.css\";\r\n\r\nfunction Track({ track, onAdd, onRemove, isRemoval }) {\r\n  const [removing, setRemoving] = useState(false);\r\n\r\n  const handleAdd = () => {\r\n    onAdd(track);\r\n    const element = document.getElementById(track.id);\r\n    element.classList.add(\"fade-in\");\r\n    setTimeout(() => element.classList.remove(\"fade-in\"), 500);\r\n  };\r\n\r\n  const handleRemove = () => {\r\n    setRemoving(true);\r\n    const element = document.getElementById(track.id);\r\n    element.classList.add(\"fade-out\");\r\n    setTimeout(() => {\r\n      onRemove(track);\r\n    }, 500); // Remove after the animation\r\n  };\r\n\r\n  return (\r\n    <div\r\n      id={track.id}\r\n      className={`Track ${removing ? \"removing\" : \"\"} card my-2`}\r\n    >\r\n      <div className=\"card-body d-flex justify-content-between align-items-center\">\r\n        <div className=\"d-flex flex-column align-items-start\">\r\n          <h5 className=\"card-title\">{track.name}</h5>\r\n          <p className=\"card-text\">\r\n            {track.artist} | {track.album}\r\n          </p>\r\n          {track.preview_url && (\r\n            <audio controls className=\"mt-2\">\r\n              <source src={track.preview_url} type=\"audio/mpeg\" />\r\n              Your browser does not support the audio element.\r\n            </audio>\r\n          )}\r\n        </div>\r\n        {isRemoval ? (\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            onClick={handleRemove}\r\n            aria-label=\"Remove track from the playlist\"\r\n          >\r\n            -\r\n          </button>\r\n        ) : (\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            onClick={handleAdd}\r\n            aria-label=\"Add track to the playlist\"\r\n          >\r\n            +\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nTrack.propTypes = {\r\n  track: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    artist: PropTypes.string.isRequired,\r\n    album: PropTypes.string.isRequired,\r\n    preview_url: PropTypes.string,\r\n  }).isRequired,\r\n  onAdd: PropTypes.func.isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n  isRemoval: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Track;\r\n","import React from \"react\";\r\nimport \"./Tracklist.css\";\r\nimport Track from \"../Track/Track\";\r\n\r\nfunction Tracklist({ tracks = [], onAdd, onRemove, isRemoval }) {\r\n  return (\r\n    <div className=\"Tracklist\">\r\n      {tracks.map((track) => (\r\n        <Track\r\n          key={track.id}\r\n          track={track}\r\n          onAdd={onAdd}\r\n          onRemove={onRemove}\r\n          isRemoval={isRemoval}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tracklist;\r\n"],"names":["_ref","playlistName","playlistTracks","onRemove","onNameChange","onSave","shareableLink","isSaving","setIsSaving","useState","_jsxs","className","children","_jsx","type","value","onChange","event","target","placeholder","Tracklist","tracks","isRemoval","onClick","async","disabled","role","readOnly","copyToClipboard","navigator","clipboard","writeText","then","alert","href","encodeURIComponent","rel","track","onAdd","removing","setRemoving","id","name","artist","album","preview_url","controls","src","handleRemove","document","getElementById","classList","add","setTimeout","handleAdd","element","remove","map","Track"],"sourceRoot":""}